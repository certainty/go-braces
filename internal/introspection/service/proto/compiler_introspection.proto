syntax = "proto3";

package compilerintrospection;

option go_package = "./compiler_introsection";

message HeloRequest {
   IntrospectionType introspection_type = 1; 
   CapabilityList capabilities = 2;
}

message HeloResponse {
  string client_id = 1;
  CapabilityList capabilities = 2;
}

message CapabilityList {
}

enum IntrospectionType {
  UNKNOWN = 0;  // default value (optional)
  COMPILER = 1;
  VM = 2;
}

message Event {
  // Add fields related to the introspection events
  // Workaround while the api hasn't settled yet
  string json=1;
}

message EventStreamRequest {

}

message AbortSessionRequest {
  string session_id = 1;
}

message AbortSessionResponse {
  // Add any fields necessary for indicating the result of aborting a session
}

service CompilerIntrospection {
  rpc Helo (HeloRequest) returns (HeloResponse) {}
  rpc EventStream (EventStreamRequest) returns (stream Event) {}
  rpc AbortSession (AbortSessionRequest) returns (AbortSessionResponse) {}
}
