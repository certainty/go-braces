name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v1.52.2
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache golangci-lint
        uses: actions/cache@v2
        with:
          path: ~/go/bin/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ env.GOLANGCI_LINT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-

      - name: Install golangci-lint
        run: |
          if ! command -v golangci-lint &> /dev/null; then
            go install github.com/golangci/golangci-lint/cmd/golangci-lint@${{ env.GOLANGCI_LINT_VERSION }}
          fi

      - name: Lint
        run: golangci-lint run

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Check formatting
        run: |
          if gofmt -d . | grep -q '^'; then
            echo "Code is not properly formatted. Please run 'gofmt -w .'"
            exit 1
          fi
